class Solution {
public:
  int largestRectangleArea(vector<int> &h) {  
       stack<int> S;  
       h.push_back(0);  
       int sum = 0;  
       for (int i = 0; i < h.size(); i++) {  
            if (S.empty() || h[i] > h[S.top()]) S.push(i);  
            else {  
                 int tmp = S.top();
                 S.pop();
                 int tmp2=S.empty()? i : i-S.top()-1;
                 sum = max(sum, h[tmp]*tmp2);  
                 i--;  
            }  
       }  
       return sum;  
  }  
};

// 维护一个递增的栈，每次比较栈顶与当前元素。如果当前元素大于栈顶元素，则入站，否则合并现有栈，直至栈顶元素小于当前元素
