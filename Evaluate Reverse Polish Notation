class Solution {
public:
       int evalRPN(vector<string> &tokens) {   
            stack<int> operand;   
            for(int i =0; i< tokens.size(); i++)   
            {   
                 if ((tokens[i][0] == '-' && tokens[i].size()>1) //negative number  
                           || (tokens[i][0] >= '0' && tokens[i][0] <= '9')) //positive number  
                 {   
                      operand.push(atoi(tokens[i].c_str()));
                      // string::c_str
                      //Returns a pointer to an array that contains a null-terminated sequence of characters
                      //(i.e., a C-string) representing the current value of the string object.
                      continue;  
                 }  
                 int op1 = operand.top();  
                 operand.pop();  
                 int op2 = operand.top();  
                 operand.pop();  
                 if(tokens[i] == "+") operand.push(op2+op1);  
                 if(tokens[i] == "-") operand.push(op2-op1);  
                 if(tokens[i] == "*") operand.push(op2*op1);  
                 if(tokens[i] == "/") operand.push(op2/op1);  
            }  
            return operand.top();  
       } 
};

http://fisherlei.blogspot.com/2013/12/leetcode.html
